# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

# main ディレクティブのコンテキスト(設定ファイルの最上位階層) #
# ===================================

# ワーカープロセスを実行するユーザー権限の設定 p108
user nginx;

# ワーカープロセスのの数を設定 p109
# 何個ワーカーを作るか
# 最大同時接続数の上限を変更
## number : cpu コア数 (デフォルト:1)
## auto : 自動
# worker_processes 2; <= # CPUのコア数と同じにするか自動
worker_processes number | auto;


# 1ワーカーに対しての最大同時接続(処理)数の指定
## conn_number : コネクション数 (デフォルト : 512) : 数字を入力
worker_connections conn_number;

# エラーログの出力先のファイル名 : ロギングレベルを設定 p110
error_log /var/log/nginx/error.log;

# プロセスIDを保存するファイルの出力先を設定 p111
# プロセスIDの場所を変えると｢nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)｣が発生
# プロセスIDを変更して再読み込みなどをすると､NGINXサービスが起動しない
pid /var/run/nginx.pid;

# なんでmainディレクティブのコンキテストに置いてるのかな?
# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
# 外部の設定ファイルの読み込み p113 : バーチャルホストなどの設定の読み込み p113
include /usr/share/nginx/modules/*.conf;
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# events ディレクティブのコンキテスト #
events {
    ## conn_number : コネクション数 (デフォルト : 512)
    worker_connections conn_number;
}
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# http ディレクティブのコンキテスト #
http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # アクセスログ名やパスを設定
    # name : アクセスログの書式名
    # access_log path name
    access_log  /var/log/nginx/access.log  main;

    # 変数を利用してログを分け
    # access_log  /var/log/nginx/${host}-access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    # 検索中
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # Nginxのバージョンを伏せる p103
    server_tokens off;

    index   index.html index.htm;

    server {
        listen       80 default_server;
        # IPv6の設定方法
        listen       [::]:80 default_server;
        server_name  localhost;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        # サーバーのバージョンなどを隠す
        # /server_tokens on;
        # Server: nginx/1.14.1  ONの場合
        # Server: nginx         OFFの場合
        server_tokens off

        location / {
        }

        # redirect server error pages to the static page /40x.html
        #
        error_page 404 /404.html;
            location = /40x.html {
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        # It is *strongly* recommended to generate unique DH parameters
#        # Generate them with: openssl dhparam -out /etc/pki/nginx/dhparams.pem 2048
#        #ssl_dhparam "/etc/pki/nginx/dhparams.pem";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#        ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

